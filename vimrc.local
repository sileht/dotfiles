Bundle 'L9'
Bundle 'lbdbq'
Bundle 'jmcantrell/vim-virtualenv'
Bundle 'rodjek/vim-puppet'

let g:indent_guides_enable_on_vim_startup = 0
"let g:pyflakes_use_quickfix = 0
"""let g:pymode_rope = 0
"""let g:pymode_trim_whitespaces = 0
let g:pymode_lint = 1
let g:pymode_lint_unmodified = 1
let g:pymode_lint_checkers = ['pyflakes' ,'pep8']
let g:pymode_lint_sort = ['E','W', 'C','I']
let g:pymode_lint_ignore = '' 
"""let g:pymode_lint_ignore = 'E0602 undefined name "_"' 
let g:pymode_lint_ignore = 'E265'

let g:syntastic_python_checkers = ['flake8']
"let g:syntastic_quiet_messages = { "regex":['\m\[invalid-name\]', '\m\[missing-docstring\]' ]}
"let g:syntastic_quiet_messages = { "type": "style" }

let g:virtualenv_directory = '.tox/'
let g:virtualenv_auto_activate = 1

let maplocalleader = 'Ã¹'

imap <silent> <Esc>OA <Up>
imap <silent> <Esc>OB <Down>
imap <silent> <Esc>OC <Right>
imap <silent> <Esc>OD <Left>
imap <silent> <Esc>OH <Home>
imap <silent> <Esc>OF <End>
imap <silent> <Esc>[5~ <PageUp>
imap <silent> <Esc>[6~ <PageDown>]]

set nocursorline
set nofoldenable
set scrolloff=10
"set colorcolumn=81
set nonu
set mouse=
set nolist
set nohlsearch
set wrap
set nospell

noremap <S-left> :bprev<CR> 
noremap <S-right> :bnext<CR>
map P "0p

map <F6> :w<CR>:!aspell -l en -c %<CR>:e %<CR>
map <F7> :w<CR>:!aspell -l fr -c %<CR>:e %<CR>

"imap <C-V> "+p
"inoremap <F5> <ESC>:set paste<CR>gi<C-V>+<ESC>:set nopaste<CR>gi
map <F4> :set paste<CR>"*p:set nopaste<CR>
map <F5> :set paste<CR>"+p:set nopaste<CR>


" For USE ligne in gentoo
function SortLine()
    let line = getline('.')
    let l:words = split(split(line,' \')[0], ' ')
    let l:words = sort(l:words)
    call setline(".", join(l:words, ' ').' \')
endfunction


" Read flake8 config from tox if available
if has('python')
python << pythoneof
import vim
import os
import ConfigParser

path = os.path.abspath(vim.eval('getcwd()'))
while True:
    plist = os.listdir(path)
    if 'tox.ini' in plist:
        config = ConfigParser.ConfigParser()
        config.read(['tox.ini'])
        try:
            ignore = config.get('flake8', 'ignore')
        except ConfigParser.NoOptionError:
            pass
        except ConfigParser.NoSectionError:
            pass
        else:
            #vim.command("let g:pymode_lint_ignore = 'E0602 undefined name \"_\",%s'" % ignore)
            vim.command("let g:pymode_lint_ignore = 'E265,%s'" % ignore)
        break
    # quit if we found source code root
    elif '.git' in plist:
        break
    elif '.hg' in plist:
        break
    elif '.vimrc' in plist:
        break
    new_p = os.path.abspath(os.path.join(path, ".."))
    if new_p == path:
        break
    path = new_p
pythoneof
endif



