Bundle 'vim-scripts/FuzzyFinder'
Bundle 'L9'
Bundle 'lbdbq'
Bundle 'jmcantrell/vim-virtualenv'
Bundle 'tacahiroy/ctrlp-funky'

let g:indent_guides_enable_on_vim_startup = 0
let g:pyflakes_use_quickfix = 0
let g:pymode_rope = 0
let g:pymode_trim_whitespaces = 0
let g:pymode_lint_checkers = ['pyflakes' ,'pep8']
let g:pymode_lint_sort = ['E','C','I']
let g:pymode_lint_ignore = 'E0602 undefined name "_"' 

let g:virtualenv_directory = '.tox/'
let g:virtualenv_auto_activate = 1

let g:ctrlp_extensions = ['funky']

nnoremap <Leader>fu :CtrlPFunky<Cr>

python << pythoneof
import vim
import os
import ConfigParser

path = os.path.abspath(vim.eval('getcwd()'))
while True:
    plist = os.listdir(path)
    if 'tox.ini' in plist:
        config = ConfigParser.ConfigParser()
        config.read(['tox.ini'])
        try:
            ignore = config.get('flake8', 'ignore')
        except ConfigParser.NoOptionError:
            pass
        else:
            vim.command("let g:pymode_lint_ignore = 'W,E0602 undefined name \"_\",%s'" % ignore)
        break
    # quit if we found source code root
    elif '.git' in plist:
        break
    elif '.hg' in plist:
        break
    elif '.vimrc' in plist:
        break
    new_p = os.path.abspath(os.path.join(path, ".."))
    if new_p == path:
        break
    path = new_p
pythoneof


"let maplocalleader = ','

set nocursorline
set nofoldenable
set scrolloff=10
"set colorcolumn=81
set nonu
set mouse=
set nolist
set nohlsearch
set wrap
set nospell

noremap <S-left> :bprev<CR> 
noremap <S-right> :bnext<CR>
nnoremap <F3> :call NumbersToggle()<CR>
nnoremap <F4> :call NumbersDisable()<CR>:set nu<CR>:set nonu<CR>

map <F6> :w<CR>:!aspell -l en -c %<CR>:e %<CR>
map <F7> :w<CR>:!aspell -l fr -c %<CR>:e %<CR>

function! MyNumbersToggle()
    if (g:mode == 1)
        let g:mode = 0
        set relativenumber
    else
        let g:mode = 1
        set norelativenumber
    endif
endfunction

" For USE ligne in gentoo
function SortLine()
    let line = getline('.')
    let l:words = split(split(line,' \')[0], ' ')
    let l:words = sort(l:words)
    call setline(".", join(l:words, ' ').' \')
endfunction



