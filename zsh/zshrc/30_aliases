# zshrc/30_aliases
#
# Copyright Abaakouk Mehdi <sileht@sileht.net>
# Released under the terms of the Artistic Licence 2.0
#
# Defines command shortcuts
#

autoload -U allopt
alias allopt="allopt |less"

mka () { time schedtool -B -n 1 -e ionice -n 1 make -j $(nproc) "$@" }
imka () { time schedtool -D -n 19 -e ionice -c 3 make -j $(nproc) "$@" }
masq (){ sudo iptables -t nat -A POSTROUTING -s "$1" ! -d "$1" -j MASQUERADE }
ban(){ sudo iptables -I INPUT 1 -s "$1" -j DROP }
unban(){ sudo iptables -D INPUT -s "$1" -j DROP }
alias idletask='schedtool -D -n 19 -e ionice -c 3'
alias batchtask='schedtool -B -n 1 -e ionice -n 1'

function s() { pwd >| /dev/shm/.saved_dir; }
function i() { p="$(cat /dev/shm/.saved_dir 2>/dev/null)"; [ -d $p ] && cd $p }
i
postcmd_functions+=s
chpwd_functions+=s

inw(){ Xephyr :1 & pid=$! ; DISPLAY=:1 $*; kill $pid ;}

if [ "$HOST" = "bob" ]; then
    function novpn() { sudo systemctl stop openvpn@redhat; sudo /etc/init.d/fastd stop; sudo rm /etc/dnsmasq.d/redhat.conf;sudo /etc/init.d/dnsmasq restart; }
    function vpnrh() { sudo systemctl restart openvpn@redhat ;}
    alias vpnttnn='sudo /etc/init.d/fastd start'
else
    function novpn(){ local activevpn="$(nmcli -t -f TYPE,NAME c s --active | sed -ne 's/vpn:\(.*\)/\1/gp')" ; [ "$activevpn" ] && nmcli c d "$activevpn" && sudo systemctl restart dnsmasq ; }
    function vpnrh(){ nmcli c u "Redhat UDP" && sudo systemctl restart dnsmasq; }
fi

alias open="xdg-open"
alias rm="nocorrect rm -i"
alias mv="nocorrect mv -i"
alias cp="nocorrect cp -i"
alias ln='nocorrect ln'
alias mkdir='nocorrect mkdir'
if [ ${UID} -eq 0 ]; then
	alias sudo=""
else
	alias sudo="nocorrect sudo"
fi
alias wget='noglob wget'
alias curl='noglob curl'
alias apt-cache='noglob apt-cache'
alias man="LANG=C man"
alias df="df -h"
alias diff='diff -rNu'
alias cal='cal -3'
alias cmutt="find ~/.mutt/cache/headers/ -type f -exec tcbmgr optimize -nl {} \; ; mutt"
#alias vim="TERM=xterm vim"
alias vi="vim"
alias svi="sudo -E vim" 
alias psql="sudo -i -u postgres psql"
alias pyclean='find . -type f -name "*.py[co]" -delete'

etox() {
    zparseopts -D e+:=env
    typeset -A helper
    helper=($(seq 1 ${#env}))
    rootdir="."
    [ ! -d "$rootdir/.tox" ] && rootdir=".."
    [ ! -d "$rootdir/.tox" ] && rootdir="../.."
    [ ! -d "$rootdir/.tox" ] && rootdir="../../.."
    [ ! -d "$rootdir/.tox" ] && rootdir="../../../.."
    for item in ${(@v)helper}; do
        for e in "${(@s/,/)env[$item]}" ; do
            $rootdir/.tox/$e/bin/"$@"
        done
    done
}

sshclean(){
    hostname=$(echo $1 | sed 's/\.t$/.tetenauetral.net/g')
    for i in $hostname $(dig +short $hostname A; dig +short $hostname AAAA); do 
        ssh-keygen -R "[$i]:2222"
    done
}

update-flash() {
    sudo update-pepperflashplugin-nonfree --status
    sudo update-pepperflashplugin-nonfree --install
    sudo update-pepperflashplugin-nonfree --status
}

utox() {
    find /workspace/pip_cache/ -name '*.dev*' -delete
    zparseopts -D e+:=env
    typeset -A helper
    helper=($(seq 1 ${#env}))
    for item in ${(@v)helper}; do
        for e in "${(@s/,/)env[$item]}" ; do
            etox -e $e "$@" pip install -U pip
            etox -e $e "$@" pip install -U -e . $(tox --notest --showconfig | awk '/^\[testenv:'$e'\]$/{while ($1 != "deps") { getline ; }; print $0 ; }' | sed -e 's/\s*deps\s*=\s*\[\(.*\)\]/\1/g' | sed -e 's/, / /g')
        done
    done
}

mtox(){
    targets=($({ echo -e 'py27\npy34' ; sed -n '/testenv/s/\[testenv:\(.*\)\]/\1/gp' tox.ini }| sort -u))
    PS3='Please enter your choice: '
    select opt in "${targets[@]}"; do
        LATEST_TOX_CMD=("-e$opt" "$@")
        tox -e$opt "$@"
        break
    done
}
ltox(){
    tox $LATEST_TOX_CMD
}

alias etox="nocorrect etox"
alias utox="nocorrect utox"
#alias tox="rm .ropeproject -rf; tox"

function of() { lsof -np "$1" }
compdef _pids of

# FIND STUFF
alias locate='noglob locate'
alias find='noglob find'
alias qf='find . -iname '
alias findnosecure="find . -perm +4000 -print"
function sfind(){ find "$@" | egrep -v '(binaire|\.svn|\.git|\.bzr)' ; }

# GREP STUFF
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
function sgrep(){ grep "$@" --color=always| egrep -v '(binaire|\.svn)' ; } 
function g(){ grep --color=always "$@" | more }

# ZSH STUFF
alias zmv="nocorrect noglob zmv"
alias mmv="nocorrect noglob zmv -W"
alias zcp='zmv -C'
alias zln='zmv -L'

hash -d doc=/usr/share/doc
hash -d log=/var/log

# LS stuff
# Remove bold for image/audio/video and archive, generated with :
#  dircolors | sed 's/\(\*\.[^=]*=\)01/\100/g'
LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=00;31:*.tgz=00;31:*.arc=00;31:*.arj=00;31:*.taz=00;31:*.lha=00;31:*.lz4=00;31:*.lzh=00;31:*.lzma=00;31:*.tlz=00;31:*.txz=00;31:*.tzo=00;31:*.t7z=00;31:*.zip=00;31:*.z=00;31:*.Z=00;31:*.dz=00;31:*.gz=00;31:*.lrz=00;31:*.lz=00;31:*.lzo=00;31:*.xz=00;31:*.bz2=00;31:*.bz=00;31:*.tbz=00;31:*.tbz2=00;31:*.tz=00;31:*.deb=00;31:*.rpm=00;31:*.jar=00;31:*.war=00;31:*.ear=00;31:*.sar=00;31:*.rar=00;31:*.alz=00;31:*.ace=00;31:*.zoo=00;31:*.cpio=00;31:*.7z=00;31:*.rz=00;31:*.cab=00;31:*.jpg=00;35:*.jpeg=00;35:*.gif=00;35:*.bmp=00;35:*.pbm=00;35:*.pgm=00;35:*.ppm=00;35:*.tga=00;35:*.xbm=00;35:*.xpm=00;35:*.tif=00;35:*.tiff=00;35:*.png=00;35:*.svg=00;35:*.svgz=00;35:*.mng=00;35:*.pcx=00;35:*.mov=00;35:*.mpg=00;35:*.mpeg=00;35:*.m2v=00;35:*.mkv=00;35:*.webm=00;35:*.ogm=00;35:*.mp4=00;35:*.m4v=00;35:*.mp4v=00;35:*.vob=00;35:*.qt=00;35:*.nuv=00;35:*.wmv=00;35:*.asf=00;35:*.rm=00;35:*.rmvb=00;35:*.flc=00;35:*.avi=00;35:*.fli=00;35:*.flv=00;35:*.gl=00;35:*.dl=00;35:*.xcf=00;35:*.xwd=00;35:*.yuv=00;35:*.cgm=00;35:*.emf=00;35:*.axv=00;35:*.anx=00;35:*.ogv=00;35:*.ogx=00;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:';
export LS_COLORS
_LS_OPTS='-bCF --color=auto --group-directories-first'
# I prefer POSIX collation for ls
alias ls="LC_COLLATE=POSIX ls -h --color=auto $_LS_OPTS"
alias ll="ls -lF"
alias la="ls -aF"
alias lla="ls -alF"
alias lsd='ls -ld *(-/DN)'
alias lsdir="for dir in *;do;if [ -d \$dir ];then;du -xhsL \$dir 2>/dev/null;fi;done"
function l(){ ls -hla --color="always" "$@" | more }
alias vless='vim -u /usr/share/vim/vim71/macros/less.vim'

unset _LS_OPTS

# handy documentation lookup on Debian
# from http://www.michael-prokop.at/computer/config/.zshrc
doc() { cd /usr/share/doc/$1 && ls } 
_doc() { _files -W /usr/share/doc -/ }
compdef _doc doc

alias cmd="wineconsole --backend=curses cmd"

# LOG STUFF
function usniff(){sudo lsof -u$1|egrep -v "(/usr|/dev|/bin|/lib|socket$|pipe)"} # MOTD
function sudolog(){ sudo sed -n -e "/sudo:.*COMMAND/$@p" /var/log/auth.log } #MOTD
function sulog(){ sudo sed -n -e "/su:.*COMMAND/$@p" /var/log/auth.log } #MOTD
function showlog(){ sudo tail -f /var/log/{syslog,messages,daemon.log} }


function killd(){ #MOTD
    DISPLAY="" ps xae | grep DISPLAY=:$1 | grep -v grep | awk '{print $1}' | zargs -r kill -9
}

function fwget(){
    local filename=$(wget -S --spider "$*" 2>&1| grep 'Content-disposition: attachment' | sed -e '/Content-disposition: attachment/s/.*filename="\(.*\)"/\1/g')
    if [ -n "$filename" ] ; then
       wget -O $filename "$*"
    else
       echo " * No attachement found"
    fi
}

# Service stuff
alias invoke-rc.d="nocorrect sudo invoke-rc.d"
alias service="nocorrect sudo service"
alias systemctl="nocorrect sudo systemctl"
compdef _service invoke-rc.d

# CD STUFF
function cd () {
if [[ -z $2 ]]; then
  if [[ -f $1 ]]; then
    builtin cd $1:h
  else
    if [[ $1 = ".." ]]; then
        new_pwd=${PWD%/*}
        [ -z "$new_pwd" ] && new_pwd="/"
        builtin cd $new_pwd
    else
        builtin cd $1
    fi
  fi
else
  if [[ -z $3 ]]; then
    builtin cd $1 $2
  else
    echo cd: too many arguments
  fi
fi
}

function mkfile(){ # MOTD
    qemu-img create -f raw "$2" "$1"
    return $?
}

cdt () {
  cd $(mktemp -td cdt.XXXXXXXX)
  pwd
}

vit () {
  local tmpfile=$(mktemp -t vit.XXXXXXXX)
  [ "$1" = '-' ] && cat >| $tmpfile
  sensible-editor $tmpfile </dev/tty >/dev/tty
  echo $tmpfile
}
p () {
    cd ~/workspace/os_dev/stack/*${1}*(/[0,1])
    s
}

# vim:ft=zsh
