# zshrc/30_aliases
#
# Copyright Abaakouk Mehdi <sileht@sileht.net>
# Released under the terms of the Artistic Licence 2.0
#
# Defines command shortcuts
#

autoload -U allopt
alias allopt="allopt |less"

mka () {
	schedtool -B -n 1 -e ionice -n 1 make -j $(cat /proc/cpuinfo | grep "^processor" | wc -l) "$@"
}

imka () { 
    schedtool -D -n 19 -e ionice -c 3 make -j $(cat /proc/cpuinfo | grep "^processor" | wc -l) "$@" 
}
masq (){
    sudo iptables -t nat -A POSTROUTING -s "$1" ! -d "$1" -j MASQUERADE
}
ban(){
    sudo iptables -I INPUT 1 -s "$1" -j DROP
}
unban(){
    sudo iptables -D INPUT -s "$1" -j DROP
}
alias idletask='schedtool -D -n 19 -e ionice -c 3'
alias batchtask='schedtool -B -n 1 -e ionice -n 1'

function s() { pwd >| ~/.saved_dir; }
function i() { cd "$(cat ~/.saved_dir)"; }
i
postcmd_functions+=s
chpwd_functions+=s

castnow(){
    file="$(readlink -f $1)"
    ln -sf "$file" /tmp/castnow.link
    if [ "${file##*.}" != "mp4" ]; then
        opt="--tomp4"
    fi
    set -x
    DEBUG=castnow* ~/logiciel/node/bin/castnow $opt /tmp/castnow.link
    set +x
}

if [ "$HOST" = "bob" ]; then
    alias novpn='sudo systemctl stop openvpn@redhat;sudo systemctl stop openvpn@enovance;'
    alias vpneno='sudo systemctl stop openvpn@redhat; sudo systemctl start openvpn@enovance'
    alias vpnrh='sudo systemctl stop openvpn@enovance; sudo systemctl restart openvpn@redhat'
else
    novpn(){ local activevpn="$(nmcli -t -f TYPE,NAME c s --active | sed -ne 's/vpn:\(.*\)/\1/gp')" ; [ "$activevpn" ] && nmcli c d "$activevpn" && sudo systemctl restart dnsmasq ; }
    alias vpnrh='nmcli c u "Redhat UDP" && sudo systemctl restart dnsmasq; '
fi

alias open="xdg-open"
alias rm="nocorrect rm -i"
alias mv="nocorrect mv -i"
alias cp="nocorrect cp -i"
alias ln='nocorrect ln'
alias mkdir='nocorrect mkdir'
if [ $(id -u) -eq 0 ]; then
	alias sudo=""
else
	alias sudo="nocorrect sudo"
fi
alias wget='noglob wget'
alias curl='noglob curl'
alias apt-cache='noglob apt-cache'
alias man="LANG=C man"
alias df="df -h"
alias diff='diff -rNu'
alias cal='cal -3'
alias cmutt="find ~/.mutt/cache/headers/ -type f -exec tcbmgr optimize -nl {} \; ; mutt"
#alias vim="TERM=xterm vim"
alias vi="vim"
alias svi="sudo -H vim" 
alias psql="sudo -i -u postgres psql"
alias pyclean='find . -type f -name "*.py[co]" -delete'

etox() {
    zparseopts -D e+:=env
    typeset -A helper
    helper=($(seq 1 ${#env}))
    for item in ${(@v)helper}; do
        for e in "${(@s/,/)env[$item]}" ; do
            .tox/$e/bin/"$@"
        done
    done
}

alias etox="nocorrect etox"
alias tox="rm .ropeproject -rf; tox"
alias u="sudo -i -u"

function of() { lsof -np "$1" }
compdef _pids of

# FIND STUFF
alias locate='noglob locate'
alias find='noglob find'
alias qf='find . -iname '
alias findnosecure="find . -perm +4000 -print"
function sfind(){ find "$@" | egrep -v '(binaire|\.svn|\.git|\.bzr)' ; }

# GREP STUFF
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
function sgrep(){ grep "$@" --color=always| egrep -v '(binaire|\.svn)' ; } 
function g(){ grep --color=always "$@" | more }

# ZSH STUFF
alias zmv="nocorrect noglob zmv"
alias mmv="nocorrect noglob zmv -W"
alias zcp='zmv -C'
alias zln='zmv -L'

hash -d doc=/usr/share/doc
hash -d log=/var/log

# LS stuff
_LS_OPTS='-bCF --color=auto'
ls --group-directories-first >/dev/null 2>&1 \
  && _LS_OPTS="$_LS_OPTS --group-directories-first"
# I prefer POSIX collation for ls
alias ls="LC_COLLATE=POSIX ls -h --color=auto $_LS_OPTS"
alias ll="ls -lF"
alias la="ls -aF"
alias lla="ls -alF"
alias lsd='ls -ld *(-/DN)'
alias lsdir="for dir in *;do;if [ -d \$dir ];then;du -xhsL \$dir 2>/dev/null;fi;done"
function l(){ ls -hla --color="always" "$@" | more }
alias vless='vim -u /usr/share/vim/vim71/macros/less.vim'

unset _LS_OPTS

# handy documentation lookup on Debian
# from http://www.michael-prokop.at/computer/config/.zshrc
doc() { cd /usr/share/doc/$1 && ls } 
_doc() { _files -W /usr/share/doc -/ }
compdef _doc doc

alias cmd="wineconsole --backend=curses cmd"

# LOG STUFF
function usniff(){sudo lsof -u$1|egrep -v "(/usr|/dev|/bin|/lib|socket$|pipe)"} # MOTD
function sudolog(){ sudo sed -n -e "/sudo:.*COMMAND/$@p" /var/log/auth.log } #MOTD
function sulog(){ sudo sed -n -e "/su:.*COMMAND/$@p" /var/log/auth.log } #MOTD
function showlog(){ sudo tail -f /var/log/{syslog,messages,daemon.log} }


function killd(){ #MOTD
    DISPLAY="" ps xae | grep DISPLAY=:$1 | grep -v grep | awk '{print $1}' | zargs -r kill -9
}

function fwget(){
    local filename=$(wget -S --spider "$*" 2>&1| grep 'Content-disposition: attachment' | sed -e '/Content-disposition: attachment/s/.*filename="\(.*\)"/\1/g')
    if [ -n "$filename" ] ; then
       wget -O $filename "$*"
    else
       echo " * No attachement found"
    fi
}

function rappel(){
    timespec="$@"
    if [ "${timespec[1]}" == "+" ]; then
        timespec="now $timespec"
    fi
    echo -n "Sujet: " 
    read title
    at "$timespec" <<EOF
mail -s '$title' sileht@sileht.net <<maileof
$(cat)
maileof
EOF
}

# Service stuff
alias invoke-rc.d="nocorrect sudo invoke-rc.d"
alias service="nocorrect sudo service"
compdef _service invoke-rc.d

# CD STUFF
function cdw(){ cd $(which "$@") }
function cd () {
if [[ -z $2 ]]; then
  if [[ -f $1 ]]; then
    builtin cd $1:h
  else
    if [[ $1 = ".." ]]; then
        new_pwd=${PWD%/*}
        [ -z "$new_pwd" ] && new_pwd="/"
        builtin cd $new_pwd
    else
        builtin cd $1
    fi
  fi
else
  if [[ -z $3 ]]; then
    builtin cd $1 $2
  else
    echo cd: too many arguments
  fi
fi
}

function mkfile(){ # MOTD
    qemu-img create -f raw "$2" "$1"
    return $?
}

cdt () {
  cd $(mktemp -td cdt.XXXXXXXX)
  pwd
}

vit () {
  local tmpfile=$(mktemp -t vit.XXXXXXXX)
  [ "$1" = '-' ] && cat >| $tmpfile
  sensible-editor $tmpfile </dev/tty >/dev/tty
  echo $tmpfile
}


# vim:ft=zsh
