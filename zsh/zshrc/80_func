# zshrc/80_func

alias freetv="vlc --m3u-extvlcopt http://mafreebox.freebox.fr/freeboxtv/playlist.m3u"
function freelisten(){
    ps xa | grep "java.*homejukebox" | grep -v grep | awk '{print $1 }' | xargs kill -9
    cd ~/logiciel/freeplayer/bin/
    ./vlc-fbx.sh listen.m3u
    ~/logiciel/homejukebox-0.8.4/start.sh&
}
function fwget(){
    local filename=$(wget -S --spider "$*" 2>&1| grep 'Content-disposition: attachment' | sed -e '/Content-disposition: attachment/s/.*filename="\(.*\)"/\1/g')
    if [ -n "$filename" ] ; then
       wget -O $filename "$*"
    else
       echo " * No attachement found"
    fi
}

function clmem(){
    rm -f /tmp/big_file
    dd if=/dev/zero of=/tmp/big_file bs=200M count=10
    rm -f /tmp/big_file
}

function avnc(){
    OLD_DISPLAY=$DISPLAY
    cmd=${2:=/usr/bin/metacity}
    export DISPLAY=:1
    cmdligne=(startx $cmd -- /usr/bin/Xvnc :1 -depth 16 -dpi 96 -geometry 480x320 -once)
    echo $cmdligne
    if [ "$1" = "-d" ]; then
        $cmdligne
    else
        $cmdligne >/dev/null 2>&1 &
    fi
    sleep 1
    gnome-terminal --display=:1 &
}

function vnc(){
    OLD_DISPLAY=$DISPLAY
    cmd=${2:=/usr/bin/metacity}
    export DISPLAY=:1
    cmdligne=(startx $cmd -- /usr/bin/Xvnc :1 -depth 16 -dpi 96 -geometry 1240x700 -once)
    echo $cmdligne
    if [ "$1" = "-d" ]; then
        $cmdligne
    else
        $cmdligne >/dev/null 2>&1 &
    fi
    sleep 1
    gnome-terminal --display=:1 &
}
function stopvnc(){
    killd 1
}


function mvp() {
   strace -q -ewrite mv -- "${1}" "${2}" 2>&1 \
      | awk '{
        count += $NF
            if (count % 10 == 0) {
               percent = count / total_size * 100
               printf "%3d%% [", percent
               for (i=0;i<=percent;i++)
                  printf "="
               printf ">"
               for (i=percent;i<100;i++)
                  printf " "
               printf "]\r"
            }
         }
         END { print "" }' total_size=$(stat --format '%s' "${1}") count=0
}


function cpp() {
   strace -q -ewrite cp -- "${1}" "${2}" 2>&1 \
      | awk '{
        count += $NF
            if (count % 10 == 0) {
               percent = count / total_size * 100
               printf "%3d%% [", percent
               for (i=0;i<=percent;i++)
                  printf "="
               printf ">"
               for (i=percent;i<100;i++)
                  printf " "
               printf "]\r"
            }
         }
         END { print "" }' total_size=$(stat --format '%s' "${1}") count=0
}


# Kernel related

getkernelsource(){
    version=$(uname -r)
    version=${1-$version}
    sudo apt-get build-dep linux-image-$version
    apt-get source linux-image-$version
    echo "Toutes les versions: CONCURRENCY_LEVEL=2 AUTOBUILD=1 fakeroot debian/rules binary-debs"
    echo "une version: CONCURRENCY_LEVEL=2 AUTOBUILD=1 fakeroot debian/rules binary-FLAVOUR (ie: generic)"
    echo "CONCURRENCY_LEVEL=2 AUTOBUILD=1 NOEXTRAS=1 fakeroot debian/rules custom-binary-FLAVOUR (see debian/binary-custom.d/ for FLAVOUR)"
}


# vim: ft=zsh
