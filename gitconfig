[user]
	name = Mehdi ABAAKOUK
	email = sileht@sileht.net
	signingkey = A351AB805797B657D490BAD71892B42FCEAAEBC8
[color]
    ui = auto

[alias]
    amend = commit --amend
    b = "!f() { git -c color.ui=always branch --sort=-committerdate --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))' | head ${1:--25} ; }; f"
    bl = "!f() { git checkout $(git branch --sort=-committerdate --format='%(HEAD) %(refname:short)' | grep -v -e '^*' | head -1) ; }; f"
    get-file = "!f() { git cat-file blob $1:$2 >| $2 ; }; f"

    pr = "!f() { git r && git check && mergify stack push -k \"$@\"; }; f"
    check = "!f() { if test -f .pre-commit-config.yaml; then pre-commit run --from-ref $(git diverge-commit) --to-ref HEAD; fi ; }; f"
    t = "!f() { git branch --set-upstream-to=origin/${1:-main}; }; f"
    r = "!f() { git branch -M $(git rev-parse --abbrev-ref HEAD | sed -e 's,^wip-,,g' -e s,pull/[^-]*-sileht-,,g) ; }; f"
    f = "!f() { git branch -M \"$@\"; git main ; git checkout \"$@\" ; git t; }; f"
    p = "!f() { git pull --rebase origin \"$@\" ;}; f"

    lg = "!f() { git log --graph --pretty=cshort --abbrev-commit ${@:--15} ;}; f"
    lgd = "!f() { git log --graph --pretty=cshortiso --abbrev-commit ${@:--15} ;}; f"
    lc = !git oneline ORIG_HEAD.. --stat --no-merges
    oneline = log --pretty=oneline --abbrev-commit --graph --decorate
    who = shortlog -sne
    diffn = diff --name-status
    diffc = diff --cached
    diffs = diff --stat

    fpr = "!f() { b=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD); git fetch github && git reset --hard github/$b && git h ;}; f"

    diverge-commit = "!f() { git merge-base $(git show-upstream $@) ${1:-HEAD}; }; f"
    review-branch = "!f() { git show ${1:-HEAD}:.gitreview | git config --get --file - gerrit.defaultbranch || echo main;}; f"
    rework = "!git rebase -i $(git diverge-commit $@)^"
    show-upstream = "!f() { git rev-parse --symbolic-full-name --abbrev-ref ${1}@{u} 2>/dev/null || git rev-parse --symbolic-full-name --abbrev-ref $(git review-branch)@{u}; }; f"
    fix-upstream = "!f() { git branch --set-upstream-to=$(git show-upstream) ; } ; f"
    h = !git rework
    where = "!f() { git bisect start HEAD $(git diverge-commit); git bisect run $@; }; f"

    showv= "!f() { git show $@ | git-split-diffs --color=16m | less -RFX ;} ; f"
    diffv = "!f() { git diff $@ | git-split-diffs --color=16m | less -RFX ;} ; f"

[core]
	excludesfile = ~/.gitignore-global
    #pager = git-split-diffs --color | less -RFX
[push]
	default = simple
[branch]
    autosetuprebase = always
[pretty]
    cmedium="format:%C(auto,yellow)commit %H%C(auto,reset)%nAuthor: %an <%ae>%nCommitter: %cn <%ce>%nDate:   %cd (%cr)%n%n%w(0,4,4)%s%n%+b"
    cshort="tformat:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%an %cr)%Creset"
    cshortiso="tformat:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ai %cr)%Creset"
[log]
    date=local
[init]
	defaultBranch = main
[credential "https://ghes-dev.mergify.com"]
	helper = 
	helper = !/opt/homebrew/bin/gh auth git-credential
[credential "https://gist.github.com"]
[credential "https://github.com"]
	helper = 
	helper = !/opt/homebrew/bin/gh auth git-credential
[credential "https://gist.github.com"]
	helper = 
	helper = !/opt/homebrew/bin/gh auth git-credential
[advice]
	skippedCherryPicks = false
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[mergify-cli]
	stack-branch-prefix = devs/sileht
[merge]
    conflictstyle = merge
[merge "mergiraf"]
    name = mergiraf
    driver = mergiraf merge --git %O %A %B -s %S -x %X -y %Y -p %P

[diff]
#    tool = nvim_difftool

[difftool "nvim_difftool"]
    cmd = nvim -c \"packadd nvim.difftool\" -c \"DiffTool $LOCAL $REMOTE\"
